services:
  frontend:
    image: node:latest
    container_name: frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:3333
      - NEXT_PUBLIC_TMDB_API_KEY=${NEXT_PUBLIC_TMDB_API_KEY}
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:3333
      - NEXT_PUBLIC_CLIENT_ID=${NEXT_PUBLIC_CLIENT_ID}
      - NEXT_PUBLIC_GITHUB_CLIENT_ID=${NEXT_PUBLIC_GITHUB_CLIENT_ID}
      - NEXT_PUBLIC_GIPHY_KEY=${NEXT_PUBLIC_GIPHY_KEY}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/front
    command: [ "sh", "-c", "cd /front && rm -rf nodes_modules && rm -rf .next && npm install && npm run dev" ]
    networks:
      - hypertube-network
    restart: always

  backend:
    image: node:latest
    container_name: backend
    ports:
      - "3333:3333"
    command: [ "sh", "-c", "cd /back && rm -rf node_modules && npm install && node ace migration:run && npm run dev" ]
    volumes:
      - ./backend:/back
      - ./shared-data:/back/data
      - .env:/back/.env
    networks:
      - hypertube-network
    depends_on:
      - database
    restart: always

  database:
    image: postgres
    container_name: database
    ports:
      - "5432:5432"
    networks:
      - hypertube-network
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    restart: always

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6479"
    networks:
      - hypertube-network
    restart: always

  torrent-service:
    image: python:3.10-slim
    container_name: torrent-service
    command: [ "sh", "-c", "apt-get update && apt install ffmpeg curl unzip tar -y && cd /app && pip install -r requirements.txt && python main.py" ]
    volumes:
      - ./torrent-service:/app
      - ./shared-data:/app/data
    environment:
      - REDIS_HOST=redis
      - NEXT_PUBLIC_TMDB_API_KEY=${NEXT_PUBLIC_TMDB_API_KEY}
    depends_on:
      - frontend
      - backend
      - database
      - redis
    networks:
      - hypertube-network
    restart: always


  torrent-search:
    image: alpine:3.18
    container_name: torrent-search
    command: ["sh", "-c", "apk add --no-cache git npm && rm -rf /app && git clone https://github.com/theriturajps/Torrent-Search-API.git /app && cd /app && npm install && npm start"]
    networks:
      - hypertube-network
    ports:
      - "3001"
    restart: always


  movie-remover:
    image: alpine:latest
    container_name: movie-remover
    command: ["sh", "-c", "apk add --no-cache findutils && while true; do echo \"[Movie Remover] $(date): Cleaning...\"; find /data -mindepth 1 -type d -not -path '/data/hls*' -mtime +30 -exec rm -rf {} +; sleep 600; done"]
    volumes:
      - ./shared-data:/data
    networks:
      - hypertube-network
    restart: always

networks:
  hypertube-network:
    driver: bridge
